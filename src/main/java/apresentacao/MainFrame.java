/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apresentacao;

import br.univates.projeto_produtos.negocio.ProdManager;
import br.univates.projeto_produtos.negocio.Produto;
import java.util.List;
import java.util.Optional;
import javax.swing.JOptionPane;

/**
 *
 * @author juliano.hammes1
 */
public class MainFrame extends javax.swing.JFrame {

    private ProdManager productManager;

    
    public MainFrame() {
        initComponents();
        productManager = new ProdManager();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cadastrar = new javax.swing.JButton();
        Deletar = new javax.swing.JButton();
        Compra = new javax.swing.JButton();
        Atualizar = new javax.swing.JButton();
        Venda = new javax.swing.JButton();
        Pesquisar = new javax.swing.JButton();
        Alerta = new javax.swing.JButton();
        Sair = new javax.swing.JButton();
        Listar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(58, 58, 58));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(750, 100));

        Cadastrar.setBackground(new java.awt.Color(45, 45, 45));
        Cadastrar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Cadastrar.setForeground(new java.awt.Color(213, 236, 241));
        Cadastrar.setText("Cadastrar produto");
        Cadastrar.setBorder(null);
        Cadastrar.setBorderPainted(false);
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        Deletar.setBackground(new java.awt.Color(45, 45, 45));
        Deletar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Deletar.setForeground(new java.awt.Color(213, 236, 241));
        Deletar.setText("Deletar produto");
        Deletar.setBorder(null);
        Deletar.setBorderPainted(false);
        Deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletarActionPerformed(evt);
            }
        });

        Compra.setBackground(new java.awt.Color(45, 45, 45));
        Compra.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Compra.setForeground(new java.awt.Color(213, 236, 241));
        Compra.setText("Registrar compra");
        Compra.setBorder(null);
        Compra.setBorderPainted(false);
        Compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompraActionPerformed(evt);
            }
        });

        Atualizar.setBackground(new java.awt.Color(45, 45, 45));
        Atualizar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Atualizar.setForeground(new java.awt.Color(213, 236, 241));
        Atualizar.setText("Atualizar produto");
        Atualizar.setBorder(null);
        Atualizar.setBorderPainted(false);
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        Venda.setBackground(new java.awt.Color(45, 45, 45));
        Venda.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Venda.setForeground(new java.awt.Color(213, 236, 241));
        Venda.setText("Registrar venda");
        Venda.setBorder(null);
        Venda.setBorderPainted(false);
        Venda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VendaActionPerformed(evt);
            }
        });

        Pesquisar.setBackground(new java.awt.Color(45, 45, 45));
        Pesquisar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Pesquisar.setForeground(new java.awt.Color(213, 236, 241));
        Pesquisar.setText("Pesquisar produto");
        Pesquisar.setBorder(null);
        Pesquisar.setBorderPainted(false);
        Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarActionPerformed(evt);
            }
        });

        Alerta.setBackground(new java.awt.Color(45, 45, 45));
        Alerta.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Alerta.setForeground(new java.awt.Color(213, 236, 241));
        Alerta.setText("Estoques em alerta");
        Alerta.setBorder(null);
        Alerta.setBorderPainted(false);
        Alerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlertaActionPerformed(evt);
            }
        });

        Sair.setBackground(new java.awt.Color(45, 45, 45));
        Sair.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Sair.setForeground(new java.awt.Color(213, 236, 241));
        Sair.setText("Sair");
        Sair.setBorder(null);
        Sair.setBorderPainted(false);
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });

        Listar.setBackground(new java.awt.Color(45, 45, 45));
        Listar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        Listar.setForeground(new java.awt.Color(213, 236, 241));
        Listar.setText("Listar produtos");
        Listar.setBorder(null);
        Listar.setBorderPainted(false);
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Deletar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Compra, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Venda, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Sair, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Alerta, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Listar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Compra, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Venda, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Deletar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Alerta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Listar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(Sair, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed
    String codigo = JOptionPane.showInputDialog(this,"Digite o código do produto:");
    String nome = JOptionPane.showInputDialog(this,"Digite o nome do produto:");
    String descricao = JOptionPane.showInputDialog(this,"Digite a descrição do produto:");
    double preco_compra = Double.parseDouble(JOptionPane.showInputDialog(this,"Digite o preço de compra:"));
    double preco_venda = Double.parseDouble(JOptionPane.showInputDialog(this,"Digite o preço de venda:"));
    int quantidade = Integer.parseInt(JOptionPane.showInputDialog(this,"Digite a quantidade:"));
    int quant_min = Integer.parseInt(JOptionPane.showInputDialog(this,"Digite a quantidade mínima:"));

    Produto novoProduto = new Produto(codigo, nome, descricao, preco_compra, preco_venda, quantidade, quant_min);
    if (productManager.adicionarProduto(novoProduto)) {
        JOptionPane.showMessageDialog(this, "Produto cadastrado com sucesso!");
    } else {
        JOptionPane.showMessageDialog(this, "Produto com código já existente!");
    }
    }//GEN-LAST:event_CadastrarActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        this.dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void DeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletarActionPerformed
        String codigo = JOptionPane.showInputDialog("Digite o código do produto a ser deletado:");
        if (productManager.removerProduto(codigo)) {
            JOptionPane.showMessageDialog(this, "Produto deletado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Produto não encontrado!");
        }

    }//GEN-LAST:event_DeletarActionPerformed

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
    String codigo = JOptionPane.showInputDialog(this,"Digite o código do produto a ser atualizado:");
    Produto produtoAtualizado = new Produto();
    produtoAtualizado.setCodigo(codigo);
    produtoAtualizado.setNome(JOptionPane.showInputDialog(this,"Digite o novo nome do produto:"));
    produtoAtualizado.setDescricao(JOptionPane.showInputDialog(this,"Digite a nova descrição do produto:"));
    produtoAtualizado.setPreco_compra(Double.parseDouble(JOptionPane.showInputDialog(this,"Digite o novo preço de compra:")));
    produtoAtualizado.setPreco_venda(Double.parseDouble(JOptionPane.showInputDialog(this,"Digite o novo preço de venda:")));
    produtoAtualizado.setQuantidade(Integer.parseInt(JOptionPane.showInputDialog(this,"Digite a nova quantidade:")));
    produtoAtualizado.setQuant_min(Integer.parseInt(JOptionPane.showInputDialog(this,"Digite a nova quantidade mínima:")));

    if (productManager.atualizarProduto(codigo, produtoAtualizado)) {
        JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso!");
    } else {
        JOptionPane.showMessageDialog(this, "Produto não encontrado!");
    }

    }//GEN-LAST:event_AtualizarActionPerformed

    private void CompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompraActionPerformed
    String codigo = JOptionPane.showInputDialog(this,"Digite o código do produto:");
    int quantidade = Integer.parseInt(JOptionPane.showInputDialog(this,"Digite a quantidade comprada:"));
    if (productManager.entradaEstoque(codigo, quantidade)) {
        JOptionPane.showMessageDialog(this, "Compra registrada com sucesso!");
    } else {
        JOptionPane.showMessageDialog(this, "Produto não encontrado ou quantidade inválida!");
    }
    
    }//GEN-LAST:event_CompraActionPerformed

    private void VendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VendaActionPerformed
        String codigo = JOptionPane.showInputDialog(this,"Digite o código do produto:");
    int quantidade = Integer.parseInt(JOptionPane.showInputDialog(this,"Digite a quantidade vendida:"));
    if (productManager.saidaEstoque(codigo, quantidade)) {
        JOptionPane.showMessageDialog(this, "Venda registrada com sucesso!");
    } else {
        JOptionPane.showMessageDialog(this, "Produto não encontrado ou estoque insuficiente!");
    }

    }//GEN-LAST:event_VendaActionPerformed

    private void PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarActionPerformed
    String codigo = JOptionPane.showInputDialog(this, "Digite o código do produto:");
    
    if (codigo != null && !codigo.trim().isEmpty()) {
        Optional<Produto> produto = productManager.getProdutoPorCodigo(codigo);
        
        if (produto.isPresent()) {
            JOptionPane.showMessageDialog(this, produto.get().toString(), "Detalhes do Produto", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Produto não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Garante que volta para o foco da janela principal
    this.setVisible(true);
    this.toFront();
    this.requestFocus();
    }//GEN-LAST:event_PesquisarActionPerformed

    private void AlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlertaActionPerformed
        List<Produto> produtosEmAlerta = productManager.getProdutosEmAlerta();
    if (produtosEmAlerta.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nenhum estoque em alerta.\n");
    } else {
        StringBuilder alerta = new StringBuilder("Estoques em alerta:\n\n");
        for (Produto p : produtosEmAlerta) {
            alerta.append(p.toStringAlerta()).append("\n");
        }
        Menu_listagem menuListagem = new Menu_listagem(alerta.toString());
            menuListagem.setVisible(true);
    }

    }//GEN-LAST:event_AlertaActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        List<Produto> produtos = productManager.getTodosProdutos();
        if (produtos.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nenhum produto em estoque.");
    } else {
        StringBuilder alerta = new StringBuilder("Listagem de produtos:\n\n");
        for (Produto p : produtos) {
            alerta.append(p.toStringAlerta()).append("\n");
        }
         Menu_listagem menuListagem = new Menu_listagem(alerta.toString());
            menuListagem.setVisible(true);
    }
    }//GEN-LAST:event_ListarActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alerta;
    private javax.swing.JButton Atualizar;
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton Compra;
    private javax.swing.JButton Deletar;
    private javax.swing.JButton Listar;
    private javax.swing.JButton Pesquisar;
    private javax.swing.JButton Sair;
    private javax.swing.JButton Venda;
    // End of variables declaration//GEN-END:variables
}
